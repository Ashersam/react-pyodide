{"version":3,"sources":["python/script.py","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","listSection","backgroundColor","ul","padding","root","flexGrow","demo","palette","background","paper","width","maxWidth","overflow","maxHeight","title","margin","spacing","text","Custom","textVal","setTextVal","runEffect","classes","useState","temtText","className","Typography","style","fontWeight","variant","TextField","id","label","multiline","rows","fullWidth","value","onChange","e","target","Button","color","onClick","preventDefault","window","location","reload","refresh","App","mounted","useRef","output","setOutput","loadModule","script","a","fetch","then","src","code","trainCode","languagePluginLoader","current","pyodide","loadPackage","runPython","res","console","log","data","textdata","Paper","Grid","container","item","xs","List","subheader","map","index","ListItem","ListItemText","primary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28e9ecd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/script.f4fa9039.py\";","import { useEffect, useRef, useState } from 'react';\r\nimport script from './python/script.py';\r\nimport { Button, Container, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport './App.css';\r\nimport { textdata } from './data.js';\r\nimport * as localForage from 'localforage';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listSection: {\r\n    backgroundColor: 'inherit',\r\n  },\r\n  ul: {\r\n    backgroundColor: 'inherit',\r\n    padding: 0,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    overflow: 'auto',\r\n    maxHeight: 800,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n  text:{\r\n    flexGrow: 1,\r\n    margin: theme.spacing(4, 4, 2),\r\n    padding: 10\r\n  }\r\n}));\r\n\r\nexport const Custom = ({ textVal, setTextVal, runEffect }) => {\r\n  const classes = useStyles();\r\n  const [temtText, setTempText] = useState(textVal)\r\n  const refresh = (e) => {\r\n    e.preventDefault()\r\n    window.location.reload()\r\n  } \r\n  return(\r\n    <div className={classes.text}>\r\n    <Typography style={{fontWeight:700}} variant=\"h6\" className={classes.title}>\r\n            Text to Pyodide\r\n        </Typography>\r\n      <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Enter Text\"\r\n          multiline\r\n          rows={8}\r\n          fullWidth\r\n          value={temtText}\r\n          variant=\"outlined\"\r\n          onChange={(e) => {setTextVal(e.target.value)}}\r\n        />\r\n        <Button \r\n        variant=\"contained\" \r\n        color=\"secondary\"\r\n        onClick={runEffect}\r\n        >\r\n        Process\r\n        </Button>\r\n        <Button \r\n        variant=\"contained\" \r\n        color=\"secondary\"\r\n        onClick={(e) => refresh(e)}\r\n        >\r\n        Refresh\r\n        </Button>\r\n        </div>\r\n  )\r\n} \r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  \r\n  const mounted = useRef(false);\r\n  const [output, setOutput] = useState([]);\r\n  const [textVal, setTextVal] = useState()\r\n\r\n  // const runScript = code => {\r\n  //   window.pyodide.loadPackage([]).then(() => {\r\n  //     const output = window.pyodide.runPython(code);\r\n  //     setOutput(output);\r\n  //   })\r\n  // }\r\n\r\n  const loadModule = async script => {\r\n    const code = await fetch(script).then(src => src.text());\r\n    return code;\r\n  }\r\n\r\n  \r\n  const runEffect = async () => {\r\n    const trainCode = await loadModule(script);\r\n    window.languagePluginLoader\r\n      .then(() => {\r\n        if (mounted.current === false){\r\n          mounted.current = true;\r\n          return window.pyodide.loadPackage(['micropip']);\r\n          \r\n        }\r\n      })\r\n      .then(() => {\r\n        const py = window.pyodide;\r\n          const output = py.runPython(trainCode);\r\n          output.then((res) => {\r\n            console.log(res)\r\n            setOutput(res);\r\n          })\r\n          window.data = {\r\n            textdata: textVal\r\n          };\r\n      })\r\n  }\r\n  \r\n\r\n  return (\r\n    <Paper>\r\n    <div className={classes.root}>\r\n    <Grid container spacing={3}>\r\n    <Custom \r\n    textVal={textVal}\r\n    setTextVal={setTextVal}\r\n    runEffect={runEffect}\r\n    />\r\n      <Grid item xs={2} />\r\n        <Grid item xs>\r\n          <Typography style={{fontWeight:700}} variant=\"h6\" className={classes.title}>\r\n            Results from python scripts:\r\n          </Typography>\r\n          <div className={classes.demo}>\r\n          <List className={classes.root} subheader={<li />}>\r\n          {output.map((item, index) => (\r\n            <ListItem key={index}>\r\n              <ListItemText primary={`${item}`} />\r\n            </ListItem>\r\n          ))}\r\n        \r\n      </List>\r\n    </div>\r\n    </Grid>\r\n      </Grid>\r\n      </div>\r\n      </Paper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}